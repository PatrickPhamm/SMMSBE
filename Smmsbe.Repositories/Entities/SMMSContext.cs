// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Smmsbe.Repositories.Entities;

public partial class SMMSContext : DbContext
{
    public SMMSContext()
    {
    }

    public SMMSContext(DbContextOptions<SMMSContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Blog> Blogs { get; set; }

    public virtual DbSet<ConsentForm> ConsentForms { get; set; }

    public virtual DbSet<HealthCheckResult> HealthCheckResults { get; set; }

    public virtual DbSet<HealthCheckSchedule> HealthCheckSchedules { get; set; }

    public virtual DbSet<HealthProfile> HealthProfiles { get; set; }

    public virtual DbSet<Manager> Managers { get; set; }

    public virtual DbSet<MedicalEvent> MedicalEvents { get; set; }

    public virtual DbSet<MedicalInventory> MedicalInventories { get; set; }

    public virtual DbSet<Medication> Medications { get; set; }

    public virtual DbSet<Nurse> Nurses { get; set; }

    public virtual DbSet<Parent> Parents { get; set; }

    public virtual DbSet<ParentPrescription> ParentPrescriptions { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    public virtual DbSet<VaccinationResult> VaccinationResults { get; set; }

    public virtual DbSet<VaccinationSchedule> VaccinationSchedules { get; set; }

    /*protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=MATCHASNOOPY\\MATCHA;Initial Catalog=SMMS;Persist Security Info=True;User ID=sa;Password=12345;Encrypt=False");*/

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Blog>(entity =>
        {
            entity.HasKey(e => e.BlogId).HasName("PK__Blog__54379E5099DB7A8F");

            entity.ToTable("Blog");

            entity.Property(e => e.BlogId).HasColumnName("BlogID");
            entity.Property(e => e.Description).HasMaxLength(2000);
            entity.Property(e => e.ManagerId).HasColumnName("ManagerID");
            entity.Property(e => e.Title).HasMaxLength(200);

            entity.HasOne(d => d.Manager).WithMany(p => p.Blogs)
                .HasForeignKey(d => d.ManagerId)
                .HasConstraintName("FK__Blog__ManagerID__52593CB8");
        });

        modelBuilder.Entity<ConsentForm>(entity =>
        {
            entity.HasKey(e => e.ConsentFormId).HasName("PK__ConsentF__D6F184E04D076C8A");

            entity.ToTable("ConsentForm");

            entity.Property(e => e.ConsentFormId).HasColumnName("ConsentFormID");
            entity.Property(e => e.ConfirmDateTime).HasColumnType("datetime");
            entity.Property(e => e.ManagerId).HasColumnName("ManagerID");
            entity.Property(e => e.ParentId).HasColumnName("ParentID");

            entity.HasOne(d => d.Manager).WithMany(p => p.ConsentForms)
                .HasForeignKey(d => d.ManagerId)
                .HasConstraintName("FK__ConsentFo__Manag__534D60F1");

            entity.HasOne(d => d.Parent).WithMany(p => p.ConsentForms)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__ConsentFo__Paren__5441852A");
        });

        modelBuilder.Entity<HealthCheckResult>(entity =>
        {
            entity.HasKey(e => e.HealthCheckResultId).HasName("PK__HealthCh__BF979A4088EB8588");

            entity.ToTable("HealthCheckResult");

            entity.Property(e => e.HealthCheckResultId).HasColumnName("HealthCheckResultID");
            entity.Property(e => e.HealthCheckScheduleId).HasColumnName("HealthCheckScheduleID");
            entity.Property(e => e.HealthProfileId).HasColumnName("HealthProfileID");
            entity.Property(e => e.LeftEyeVision).HasMaxLength(50);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.NurseId).HasColumnName("NurseID");
            entity.Property(e => e.RightEyeVision).HasMaxLength(50);

            entity.HasOne(d => d.HealthCheckSchedule).WithMany(p => p.HealthCheckResults)
                .HasForeignKey(d => d.HealthCheckScheduleId)
                .HasConstraintName("FK__HealthChe__Healt__5535A963");

            entity.HasOne(d => d.HealthProfile).WithMany(p => p.HealthCheckResults)
                .HasForeignKey(d => d.HealthProfileId)
                .HasConstraintName("FK__HealthChe__Healt__5629CD9C");

            entity.HasOne(d => d.Nurse).WithMany(p => p.HealthCheckResults)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__HealthChe__Nurse__571DF1D5");
        });

        modelBuilder.Entity<HealthCheckSchedule>(entity =>
        {
            entity.HasKey(e => e.HealthCheckScheduleId).HasName("PK__HealthCh__C109A801C7E6A023");

            entity.ToTable("HealthCheckSchedule");

            entity.Property(e => e.HealthCheckScheduleId).HasColumnName("HealthCheckScheduleID");
            entity.Property(e => e.CheckDateTime).HasColumnType("datetime");
            entity.Property(e => e.Location).HasMaxLength(255);
            entity.Property(e => e.ManagerId).HasColumnName("ManagerID");
            entity.Property(e => e.Note).HasMaxLength(255);

            entity.HasOne(d => d.Manager).WithMany(p => p.HealthCheckSchedules)
                .HasForeignKey(d => d.ManagerId)
                .HasConstraintName("FK__HealthChe__Manag__5812160E");
        });

        modelBuilder.Entity<HealthProfile>(entity =>
        {
            entity.HasKey(e => e.HealthProfileId).HasName("PK__HealthPr__73C2C2B5697E8737");

            entity.ToTable("HealthProfile");

            entity.Property(e => e.HealthProfileId).HasColumnName("HealthProfileID");
            entity.Property(e => e.Allergies).HasMaxLength(255);
            entity.Property(e => e.Status).HasMaxLength(50);
            entity.Property(e => e.StudentId).HasColumnName("StudentID");

            entity.HasOne(d => d.Student).WithMany(p => p.HealthProfiles)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__HealthPro__Stude__59063A47");
        });

        modelBuilder.Entity<Manager>(entity =>
        {
            entity.HasKey(e => e.ManagerId).HasName("PK__Manager__3BA2AA81A202A204");

            entity.ToTable("Manager");

            entity.Property(e => e.ManagerId).HasColumnName("ManagerID");
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.PasswordHash).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(15);
        });

        modelBuilder.Entity<MedicalEvent>(entity =>
        {
            entity.HasKey(e => e.EventId).HasName("PK__MedicalE__7944C87070860D9B");

            entity.ToTable("MedicalEvent");

            entity.Property(e => e.EventId).HasColumnName("EventID");
            entity.Property(e => e.ActionTaken).HasMaxLength(255);
            entity.Property(e => e.EventDateTime).HasColumnType("datetime");
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.NurseId).HasColumnName("NurseID");
            entity.Property(e => e.StudentId).HasColumnName("StudentID");
            entity.Property(e => e.Symptom).HasMaxLength(100);

            entity.HasOne(d => d.Nurse).WithMany(p => p.MedicalEvents)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__MedicalEv__Nurse__59FA5E80");

            entity.HasOne(d => d.Student).WithMany(p => p.MedicalEvents)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__MedicalEv__Stude__5AEE82B9");
        });

        modelBuilder.Entity<MedicalInventory>(entity =>
        {
            entity.HasKey(e => e.MedicalInventoryId).HasName("PK__MedicalI__63F722597401A97C");

            entity.ToTable("MedicalInventory");

            entity.Property(e => e.MedicalInventoryId).HasColumnName("MedicalInventoryID");
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.ManagerId).HasColumnName("ManagerID");
            entity.Property(e => e.Type).HasMaxLength(100);
            entity.Property(e => e.Unit).HasMaxLength(50);

            entity.HasOne(d => d.Manager).WithMany(p => p.MedicalInventories)
                .HasForeignKey(d => d.ManagerId)
                .HasConstraintName("FK__MedicalIn__Manag__5BE2A6F2");
        });

        modelBuilder.Entity<Medication>(entity =>
        {
            entity.HasKey(e => e.MedicationId).HasName("PK__Medicati__62EC1ADACE48B271");

            entity.Property(e => e.MedicationId).HasColumnName("MedicationID");
            entity.Property(e => e.Dosage).HasMaxLength(50);
            entity.Property(e => e.MedicineName).HasMaxLength(100);
            entity.Property(e => e.PrescriptionId).HasColumnName("PrescriptionID");
            entity.Property(e => e.StudentId).HasColumnName("StudentID");

            entity.HasOne(d => d.Prescription).WithMany(p => p.Medications)
                .HasForeignKey(d => d.PrescriptionId)
                .HasConstraintName("FK__Medicatio__Presc__5CD6CB2B");

            entity.HasOne(d => d.Student).WithMany(p => p.Medications)
                .HasForeignKey(d => d.StudentId)
                .HasConstraintName("FK__Medicatio__Stude__5DCAEF64");
        });

        modelBuilder.Entity<Nurse>(entity =>
        {
            entity.HasKey(e => e.NurseId).HasName("PK__Nurse__438478693850138D");

            entity.ToTable("Nurse");

            entity.Property(e => e.NurseId).HasColumnName("NurseID");
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.PasswordHash).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(15);
        });

        modelBuilder.Entity<Parent>(entity =>
        {
            entity.HasKey(e => e.ParentId).HasName("PK__Parent__D339510F0D5272A7");

            entity.ToTable("Parent");

            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.Address).HasMaxLength(255);
            entity.Property(e => e.Email).HasMaxLength(100);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.PasswordHash).HasMaxLength(255);
            entity.Property(e => e.PhoneNumber).HasMaxLength(15);
        });

        modelBuilder.Entity<ParentPrescription>(entity =>
        {
            entity.HasKey(e => e.PrescriptionId).HasName("PK__ParentPr__4013081243758FB8");

            entity.ToTable("ParentPrescription");

            entity.Property(e => e.PrescriptionId).HasColumnName("PrescriptionID");
            entity.Property(e => e.Medication).HasMaxLength(100);
            entity.Property(e => e.NurseId).HasColumnName("NurseID");
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.ParentNote).HasMaxLength(255);
            entity.Property(e => e.Schedule).HasMaxLength(100);

            entity.HasOne(d => d.Nurse).WithMany(p => p.ParentPrescriptions)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__ParentPre__Nurse__5EBF139D");

            entity.HasOne(d => d.Parent).WithMany(p => p.ParentPrescriptions)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__ParentPre__Paren__5FB337D6");
        });

        modelBuilder.Entity<Student>(entity =>
        {
            entity.HasKey(e => e.StudentId).HasName("PK__Student__32C52A79655E931D");

            entity.ToTable("Student");

            entity.Property(e => e.StudentId).HasColumnName("StudentID");
            entity.Property(e => e.ClassName).HasMaxLength(50);
            entity.Property(e => e.FullName).HasMaxLength(100);
            entity.Property(e => e.Gender).HasMaxLength(10);
            entity.Property(e => e.ParentId).HasColumnName("ParentID");
            entity.Property(e => e.PasswordHash).HasMaxLength(50);
            entity.Property(e => e.StudentNumber).HasMaxLength(50);

            entity.HasOne(d => d.Parent).WithMany(p => p.Students)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK__Student__ParentI__60A75C0F");
        });

        modelBuilder.Entity<VaccinationResult>(entity =>
        {
            entity.HasKey(e => e.VaccinationResultId).HasName("PK__Vaccinat__12DE8FD941F0FDF2");

            entity.ToTable("VaccinationResult");

            entity.Property(e => e.VaccinationResultId).HasColumnName("VaccinationResultID");
            entity.Property(e => e.DateTime).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.HealthProfileId).HasColumnName("HealthProfileID");
            entity.Property(e => e.Location).HasMaxLength(255);
            entity.Property(e => e.Note).HasMaxLength(255);
            entity.Property(e => e.NurseId).HasColumnName("NurseID");
            entity.Property(e => e.VaccinationScheduleId).HasColumnName("VaccinationScheduleID");
            entity.Property(e => e.VaccineName).HasMaxLength(100);

            entity.HasOne(d => d.HealthProfile).WithMany(p => p.VaccinationResults)
                .HasForeignKey(d => d.HealthProfileId)
                .HasConstraintName("FK__Vaccinati__Healt__619B8048");

            entity.HasOne(d => d.Nurse).WithMany(p => p.VaccinationResults)
                .HasForeignKey(d => d.NurseId)
                .HasConstraintName("FK__Vaccinati__Nurse__628FA481");

            entity.HasOne(d => d.VaccinationSchedule).WithMany(p => p.VaccinationResults)
                .HasForeignKey(d => d.VaccinationScheduleId)
                .HasConstraintName("FK__Vaccinati__Vacci__6383C8BA");
        });

        modelBuilder.Entity<VaccinationSchedule>(entity =>
        {
            entity.HasKey(e => e.VaccinationScheduleId).HasName("PK__Vaccinat__DC54ECB0263DEC0C");

            entity.ToTable("VaccinationSchedule");

            entity.Property(e => e.VaccinationScheduleId).HasColumnName("VaccinationScheduleID");
            entity.Property(e => e.DateTime).HasColumnType("datetime");
            entity.Property(e => e.Description).HasMaxLength(255);
            entity.Property(e => e.Location).HasMaxLength(255);
            entity.Property(e => e.ManagerId).HasColumnName("ManagerID");
            entity.Property(e => e.NurseId).HasColumnName("NurseID");
            entity.Property(e => e.ScheduleDateTime).HasColumnType("datetime");
            entity.Property(e => e.VaccineName).HasMaxLength(100);

            entity.HasOne(d => d.Manager).WithMany(p => p.VaccinationSchedules)
                .HasForeignKey(d => d.ManagerId)
                .HasConstraintName("FK__Vaccinati__Manag__6477ECF3");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}